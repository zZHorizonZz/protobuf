/*
 * Copyright (C) 2025 Julien Viet
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 */
package io.vertx.protobuf.docs;

import io.vertx.protobuf.core.ProtoStream;
import io.vertx.protobuf.core.ProtobufReader;
import io.vertx.protobuf.core.ProtobufWriter;
import io.vertx.protobuf.core.json.ProtoJsonReader;
import io.vertx.protobuf.core.json.ProtoJsonWriter;
import io.vertx.docgen.Source;

import java.util.List;

@Source
public class Examples {

  public void createMessage() {

    // Person and PhoneNumber are generated by the protoc plugin
    Person john = new Person()
      .setId(1234)
      .setName("John Doe")
      .setEmail("jdoe@example.com")
      .setPhones(List.of(new Person.PhoneNumber()
        .setNumber("555-4321")
        .setType(Person.PhoneType.PHONE_TYPE_HOME))
      );
  }

  public void toProtobuf(Person john) {

    // ProtoWriter is generated by the protoc plugin
    ProtoStream stream = ProtoWriter.streamOf(john);
    byte[] protobuf = ProtobufWriter.encodeToByteArray(stream);
  }

  public void fromProtobuf(byte[] protobuf) {

    // MessageLiteral.Person is generated by the protoc plugin
    ProtoStream stream = ProtobufReader.readerStream(MessageLiteral.Person, protobuf);
    Person person = ProtoReader.readPerson(stream);
  }

  public void toJson(Person john) {

    ProtoStream stream = ProtoWriter.streamOf(john);
    String json = ProtoJsonWriter.encode(stream);
  }

  public void fromJson(String json) {
    ProtoStream stream = ProtoJsonReader.readStream(MessageLiteral.Person, json);
    Person person = ProtoReader.readPerson(stream);
  }
}
